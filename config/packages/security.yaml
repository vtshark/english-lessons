security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory: { memory: ~ }
        in_memory:
            memory:
                users:
                    user1:
                        password: $2y$12$MfWt6Fz1AS.YBX8HZiyj1.TJZGgeXsziD.sbuHZm2l02Lp/w.EsnK
                        roles: 'ROLE_USER'
                    admin:
                        password: $2y$12$fB79FM6z/Lk0LVeA3pjBs.JfkkWzYw4tTUB.MlweHUhNCr.MvHN4u
                        roles: 'ROLE_ADMIN'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            http_basic: ~

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html
#        secured_area:
#            logout:
#                path: /logout
#                target: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/add, roles: ROLE_ADMIN }
        - { path: ^/edit, roles: ROLE_ADMIN }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12